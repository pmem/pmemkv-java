#
# Copyright 2016-2019, Intel Corporation
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in
#       the documentation and/or other materials provided with the
#       distribution.
#
#     * Neither the name of the copyright holder nor the names of its
#       contributors may be used to endorse or promote products derived
#       from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

#
# Dockerfile - a 'recipe' for Docker to build an image of fedora-based
#              environment prepared for running pmemkv-java build and tests.
#

# Pull base image
FROM fedora:31
MAINTAINER lukasz.stolarczuk@intel.com

# Set required environment variables
ENV OS fedora
ENV OS_VER 31
ENV PACKAGE_MANAGER rpm
ENV NOTTY 1
ENV JAVA_HOME /usr/lib/jvm/java-openjdk/
ENV JAVA_TOOL_OPTIONS -Dfile.encoding=UTF-8

# Install basic tools
RUN dnf update -y \
 && dnf install -y \
	autoconf \
	automake \
	clang \
	cmake \
	daxctl-devel \
	gcc \
	gcc-c++ \
	gdb \
	git \
	gtest-devel \
	hub \
	libtool \
	make \
	man \
	maven \
	memkind-devel \
	ndctl-devel \
	numactl-devel \
	java-11-openjdk \
	pandoc \
	rapidjson-devel \
	rpm-build \
	sudo \
	tbb-devel \
	unzip \
	wget \
	which \
&& dnf clean all

# Install glibc-debuginfo
RUN dnf debuginfo-install -y glibc

# Install pmdk
COPY install-pmdk.sh install-pmdk.sh
RUN ./install-pmdk.sh rpm

# Install pmdk c++ bindings
COPY install-libpmemobj-cpp.sh install-libpmemobj-cpp.sh
RUN ./install-libpmemobj-cpp.sh RPM

# Prepare pmemkv
COPY prepare-pmemkv.sh prepare-pmemkv.sh
RUN ./prepare-pmemkv.sh RPM

# Install dependencies for ruby binding that it can be built offline
COPY install-dependencies.sh install-dependencies.sh
RUN ./install-dependencies.sh RPM

# Add user
ENV USER user
ENV USERPASS pass
RUN useradd -m $USER
RUN echo "$USER:$USERPASS" | chpasswd
RUN gpasswd wheel -a $USER
USER $USER
