# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2016-2021, Intel Corporation

#
# Dockerfile - a 'recipe' for Docker to build an image of fedora-based
#              environment prepared for running pmemkv-java build and tests.
#

# Pull base image
FROM fedora:32
MAINTAINER szymon.romik@intel.com

# Set required environment variables
ENV OS fedora
ENV OS_VER 32
ENV PACKAGE_MANAGER rpm
ENV NOTTY 1
ENV JAVA_HOME /usr/lib/jvm/java-openjdk/

# Additional parameters to build docker without building components
ARG SKIP_PMDK_BUILD
ARG SKIP_LIBPMEMOBJ_CPP_BUILD
ARG SKIP_PMEMKV_BUILD
ARG SKIP_DEPENDENCIES_BUILD

ARG LIBPMEMOBJ_CPP_DEPS="\
	libatomic"

# Install basic tools
RUN dnf update -y \
 && dnf install -y \
	autoconf \
	automake \
	clang \
	cmake \
	daxctl-devel \
	gcc \
	gcc-c++ \
	gdb \
	git \
	gtest-devel \
	hub \
	libtool \
	make \
	man \
	maven \
	memkind-devel \
	ndctl-devel \
	numactl-devel \
	java-1.8.0-openjdk-devel \
	pandoc \
	rapidjson-devel \
	rpm-build \
	sudo \
	tbb-devel \
	unzip \
	wget \
	which \
	$LIBPMEMOBJ_CPP_DEPS \
&& dnf clean all

# Install glibc-debuginfo
RUN dnf debuginfo-install -y glibc

# Install pmdk
COPY install-pmdk.sh install-pmdk.sh
RUN ./install-pmdk.sh rpm

# Install pmdk c++ bindings
COPY install-libpmemobj-cpp.sh install-libpmemobj-cpp.sh
RUN ./install-libpmemobj-cpp.sh RPM

# Prepare pmemkv
COPY prepare-pmemkv.sh prepare-pmemkv.sh
RUN ./prepare-pmemkv.sh RPM

# Setup maven settings
COPY setup-maven-settings.sh setup-maven-settings.sh
RUN ./setup-maven-settings.sh

# Install dependencies for the java binding so it can be built offline
COPY install-dependencies.sh install-dependencies.sh
RUN ./install-dependencies.sh RPM

# Add user
ENV USER user
ENV USERPASS pass
RUN useradd -m $USER
RUN echo "$USER:$USERPASS" | chpasswd
RUN gpasswd wheel -a $USER
USER $USER
