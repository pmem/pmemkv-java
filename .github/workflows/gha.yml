
name: pmemkv-java
on: [push, pull_request]

env:
    REPO:           pmemkv-java
    GITHUB_REPO:    pmem/pmemkv-java
    DOCKERHUB_REPO: pmem/pmemkv-java
    DOCKERHUB_USER:          ${{ secrets.DOCKERHUB_USER }}
    DOCKERHUB_PASSWORD:      ${{ secrets.DOCKERHUB_PASSWORD }}
    DOC_UPDATE_GITHUB_TOKEN:   ${{ secrets.DOC_UPDATE_GITHUB_TOKEN }}
    DOC_UPDATE_BOT_NAME:       ${{ secrets.DOC_UPDATE_BOT_NAME }}
    DOC_REPO_OWNER:            ${{ secrets.DOC_REPO_OWNER }}
    HOST_WORKDIR:   /home/runner/work/pmemkv-java/pmemkv-java
    WORKDIR:        utils/docker

jobs:
  linux:
    name: Linux
    runs-on: ubuntu-latest
    strategy:
      matrix:
        CONFIG: ["OS=ubuntu OS_VER=20.04 PMEMKV=master PUSH_IMAGE=1",
                 "OS=ubuntu OS_VER=20.04 PMEMKV=stable-1.0",
                 "OS=ubuntu OS_VER=20.04 PMEMKV=stable-1.1",
                 "OS=ubuntu OS_VER=20.04 PMEMKV=stable-1.2",
                 "OS=fedora OS_VER=32 PMEMKV=master PUSH_IMAGE=1 AUTO_DOC_UPDATE=1",
                 "OS=fedora OS_VER=32 PMEMKV=stable-1.0",
                 "OS=fedora OS_VER=32 PMEMKV=stable-1.1",
                 "OS=fedora OS_VER=32 PMEMKV=stable-1.2"]
    steps:
      - name: Clone the git repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Pull or rebuild the image
        run: cd $WORKDIR && ${{ matrix.CONFIG }} ./pull-or-rebuild-image.sh

      - name: Run the build
        run: cd $WORKDIR && ${{ matrix.CONFIG }} ./build.sh

      - name: Push the image
        run: cd $WORKDIR && source ./set-vars.sh && ${{ matrix.CONFIG }} /bin/bash -c "if [[ -f ${CI_FILE_PUSH_IMAGE_TO_REPO} ]]; then images/push-image.sh $OS-$OS_VER; fi"
